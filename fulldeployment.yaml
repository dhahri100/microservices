apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-adservice
  labels:
    account: adservice
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
        version: v1
    spec:
      serviceAccountName: app-adservice
      containers:
      - name: server
        image: mouhib19/microservices-adservice:1.0.0-10
        imagePullPolicy: Always 
        ports:
        - containerPort: 9555
        env:
        - name: PORT
          value: "9555"
        resources:
          limits:
            memory: "300Mi"
            cpu: "300m"
          requests:
            memory: "180Mi"
            cpu: "200m"
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 9555
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 9555
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000 
          runAsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: adservice
  labels:
    app: adservice
    service: adservice
spec:
  type: ClusterIP
  selector:
    app: adservice
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-checkout
  labels:
    account: checkout
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkout
spec:
  selector:
    matchLabels:
      app: checkout
  template:
    metadata:
      labels:
        app: checkout
        version: v1
    spec:
      serviceAccountName: app-checkout
      containers:
      - name: server
        image: mouhib19/microservices-checkoutservice:1.0.0-5
        imagePullPolicy: Always 
        ports:
        - containerPort: 5050
        env:
        - name: PORT
          value: "5050"
        - name: DISABLE_PROFILER
          value: "1"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogue:3550" 
        - name: SHIPPING_SERVICE_ADDR
          value: "shipping:50051" 
        - name: PAYMENT_SERVICE_ADDR
          value: "payment:50051" 
        - name: EMAIL_SERVICE_ADDR
          value: "email:8080" 
        - name: CURRENCY_SERVICE_ADDR
          value: "currency:7000" 
        - name: CART_SERVICE_ADDR
          value: "cart:7070"
        resources:
          limits:
            memory: "300Mi"
            cpu: "300m"
          requests:
            memory: "180Mi"
            cpu: "200m"
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 5050
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 5050
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000 
          runAsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: checkout
  labels:
    app: checkout
    service: checkout
spec:
  type: ClusterIP
  selector:
    app: checkout
  ports:
  - name: grpc
    port: 5050
    targetPort: 5050
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-cart
  labels:
    account: cart
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart
spec:
  selector:
    matchLabels:
      app: cart
  template:
    metadata:
      labels:
        app: cart
        version: v1
    spec:
      serviceAccountName: app-cart
      containers:
      - name: server
        image: mouhib19/microservices-cartservice:1.0.0-10
        imagePullPolicy: Always 
        ports:
        - containerPort: 7070
        env:
        - name: REDIS_ADDR
          value: "redis-cart:6379"
        resources:
          limits:
            memory: "300Mi"
            cpu: "300m"
          requests:
            memory: "180Mi"
            cpu: "200m"
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 7070
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 7070
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000 
          runAsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: cart
  labels:
    app: cart
    service: cart
spec:
  type: ClusterIP
  selector:
    app: cart
  ports:
  - name: grpc
    port: 7070
    targetPort: 7070
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-email
  labels:
    account: email
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: email
spec:
  selector:
    matchLabels:
      app: email
  template:
    metadata:
      labels:
        app: email
        version: v1
    spec:
      serviceAccountName: app-email
      containers:
      - name: server
        image: mouhib19/microservices-emailservice:1.0.0-10
        imagePullPolicy: Always 
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: DISABLE_PROFILER
          value: "1"
        resources:
          limits:
            memory: "300Mi"
            cpu: "300m"
          requests:
            memory: "180Mi"
            cpu: "200m"
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 8080
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 8080
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000 
          runAsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: email
  labels:
    app: email
    service: email
spec:
  type: ClusterIP
  selector:
    app: email
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-currency
  labels:
    account: currency
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: currency
spec:
  selector:
    matchLabels:
      app: currency
  template:
    metadata:
      labels:
        app: currency
        version: v1
    spec:
      serviceAccountName: app-currency
      containers:
      - name: server
        image: mouhib19/microservices-currencyservice:1.0.0-2
        imagePullPolicy: Always 
        ports:
        - containerPort: 7000
        env:
        - name: PORT
          value: "7000"
        - name: DISABLE_PROFILER
          value: "1"
        resources:
          limits:
            memory: "300Mi"
            cpu: "300m"
          requests:
            memory: "180Mi"
            cpu: "200m"
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 7000
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 7000
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000 
          runAsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: currency
  labels:
    app: currency
    service: currency
spec:
  type: ClusterIP
  selector:
    app: currency
  ports:
  - name: grpc
    port: 7000
    targetPort: 7000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-productcatalogue
  labels:
    account: productcatalogue
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productcatalogue
spec:
  selector:
    matchLabels:
      app: productcatalogue
  template:
    metadata:
      labels:
        app: productcatalogue
        version: v1
    spec:
      serviceAccountName: app-productcatalogue
      containers:
      - name: server
        image: mouhib19/microservices-productcatalogservice:1.0.0-3
        imagePullPolicy: Always 
        ports:
        - containerPort: 3550
        env:
        - name: PORT
          value: "3550"
        - name: DISABLE_PROFILER
          value: "1"
        resources:
          limits:
            memory: "300Mi"
            cpu: "300m"
          requests:
            memory: "180Mi"
            cpu: "200m"
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 3550
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 3550
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000 
          runAsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: productcatalogue
  labels:
    app: productcatalogue
    service: productcatalogue
spec:
  type: ClusterIP
  selector:
    app: productcatalogue
  ports:
  - name: grpc
    port: 3550
    targetPort: 3550
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-frontend
  labels:
    account: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-v1
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        version: v1
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: app-frontend
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: server
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
          image: mouhib19/microservices-frontend:1.0.0-4
          imagePullPolicy: Always
          ports:
          - containerPort: 8080
          env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "productcatalogue:3550"
          - name: CURRENCY_SERVICE_ADDR
            value: "currency:7000"
          - name: CART_SERVICE_ADDR
            value: "cart:7070"
          - name: RECOMMENDATION_SERVICE_ADDR
            value: "recommendation:8080"
          - name: SHIPPING_SERVICE_ADDR
            value: "shipping:50051"
          - name: CHECKOUT_SERVICE_ADDR
            value: "checkout:5050"
          - name: AD_SERVICE_ADDR
            value: "adservice:9555"
          - name: ENABLE_PROFILER
            value: "0"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---

apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
    service: frontend
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-payment
  labels:
    account: payment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment
spec:
  selector:
    matchLabels:
      app: payment
  template:
    metadata:
      labels:
        app: payment
        version: v1
    spec:
      serviceAccountName: app-payment
      containers:
      - name: server
        image: mouhib19/microservices-paymentservice:1.0.0-3
        imagePullPolicy: Always 
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        - name: DISABLE_PROFILER
          value: "1"
        resources:
          limits:
            memory: "300Mi"
            cpu: "300m"
          requests:
            memory: "180Mi"
            cpu: "200m"
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 50051
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 50051
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000 
          runAsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: payment
  labels:
    app: payment
    service: payment
spec:
  type: ClusterIP
  selector:
    app: payment
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-recommandation
  labels:
    account: recommandation
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommandation
spec:
  selector:
    matchLabels:
      app: recommandation
  template:
    metadata:
      labels:
        app: recommandation
        version: v1
    spec:
      serviceAccountName: app-recommandation
      containers:
      - name: server
        image: mouhib19/microservices-recommendationservice:1.0.0-3
        imagePullPolicy: Always 
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: DISABLE_PROFILER
          value: "1"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogue:3550" 
        resources:
          limits:
            memory: "300Mi"
            cpu: "300m"
          requests:
            memory: "180Mi"
            cpu: "200m"
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 8080
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          grpc:
            port: 8080
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000 
          runAsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: recommandation
  labels:
    app: recommandation
    service: recommandation
spec:
  type: ClusterIP
  selector:
    app: recommandation
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-redis-cart
  labels:
    account: redis-cart
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cart
spec:
  selector:
    matchLabels:
      app: redis-cart
  template:
    metadata:
      labels:
        app: redis-cart
        version: v1
    spec:
      serviceAccountName: app-redis-cart
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: redis
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: redis:alpine
        ports:
        - containerPort: 6379
        readinessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        livenessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        volumeMounts:
        - mountPath: /data
          name: redis-data
        resources:
          limits:
            memory: 256Mi
            cpu: 125m
          requests:
            cpu: 70m
            memory: 200Mi
      volumes:
      - name: redis-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cart
  labels:
    app: redis-cart
    service: redis-cart
spec:
  type: ClusterIP
  selector:
    app: redis-cart
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-shipping
  labels:
    account: shipping
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipping
spec:
  selector:
    matchLabels:
      app: shipping
  template:
    metadata:
      labels:
        app: shipping
        version: v1
    spec:
      serviceAccountName: app-shipping
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
        image: mouhib19/microservices-shippingservice:1.0.0-23
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          periodSeconds: 5
          grpc:
            port: 50051
        livenessProbe:
          grpc:
            port: 50051
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: shipping
  labels:
    app: shipping
    service: shipping
spec:
  type: ClusterIP
  selector:
    app: shipping
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051